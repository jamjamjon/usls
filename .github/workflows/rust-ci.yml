name: Rust

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install FFmpeg (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends ffmpeg clang libavcodec-dev libavformat-dev libavutil-dev pkg-config
      - name: Install FFmpeg (macOS)
        if: runner.os == 'macOS'
        run: brew install pkg-config ffmpeg
      - name: Install FFmpeg (Windows)
        if: runner.os == 'Windows'
        run: |
          $FFMPEG_URL = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z"
          Invoke-WebRequest -Uri $FFMPEG_URL -OutFile ffmpeg.7z
          7z x ffmpeg.7z -o./ffmpeg
          $env:Path += ";$(pwd)/ffmpeg/bin"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --examples --benches

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install FFmpeg (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends ffmpeg clang libavcodec-dev libavformat-dev libavutil-dev pkg-config
      - name: Install FFmpeg (macOS)
        if: runner.os == 'macOS'
        run: brew install pkg-config ffmpeg
      - name: Install FFmpeg (Windows)
        if: runner.os == 'Windows'
        run: |
          $FFMPEG_URL = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z"
          Invoke-WebRequest -Uri $FFMPEG_URL -OutFile ffmpeg.7z
          7z x ffmpeg.7z -o./ffmpeg
          $env:Path += ";$(pwd)/ffmpeg/bin"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --examples --benches

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends ffmpeg clang libavcodec-dev libavformat-dev libavutil-dev pkg-config
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends ffmpeg clang libavcodec-dev libavformat-dev libavutil-dev pkg-config
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --benches --tests --examples --all-targets --all-features -- -Dwarnings
